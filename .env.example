# Protokol57 Environment Configuration Example
# Copy this file to .env.production and fill in your actual values
# NEVER commit your actual .env.production file to Git!

# =============================================
# CRITICAL SECURITY SETTINGS
# =============================================

# Session secret for Express sessions (REQUIRED)
# Generate with: openssl rand -base64 32
# Must be at least 32 characters long
SESSION_SECRET=your-super-secret-session-key-min-32-chars-long

# Admin email addresses (comma-separated)
# These users will have admin access to create/edit/delete protocols
ADMIN_EMAILS=admin1@example.com,admin2@example.com

# =============================================
# DATABASE & SUPABASE CONFIGURATION
# =============================================

# Supabase project URL (REQUIRED)
SUPABASE_URL=https://your-project.supabase.co

# Supabase anonymous key for client-side access (REQUIRED)
# This is safe to expose in frontend code
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Supabase service role key for server-side admin operations (REQUIRED)
# CRITICAL: Never expose this in client code!
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# PostgreSQL connection string (REQUIRED)
DATABASE_URL=postgresql://user:password@host:5432/database

# =============================================
# CLIENT-SIDE ENVIRONMENT VARIABLES
# =============================================
# These are embedded at build time in the frontend bundle

# Supabase URL for client-side SDK
VITE_SUPABASE_URL=https://your-project.supabase.co

# Supabase anonymous key for client-side SDK
VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Telegram bot username (optional)
VITE_TELEGRAM_BOT_USERNAME=protokol57bot

# =============================================
# PAYMENT GATEWAY (ATMOS) CONFIGURATION
# =============================================

# ATMOS Store ID (REQUIRED for payments)
ATMOS_STORE_ID=1981

# ATMOS OAuth consumer key (REQUIRED for payments)
ATMOS_CONSUMER_KEY=your-consumer-key

# ATMOS OAuth consumer secret (REQUIRED for payments)
ATMOS_CONSUMER_SECRET=your-consumer-secret

# ATMOS Environment (production/test)
ATMOS_ENV=production

# =============================================
# AI INTEGRATION
# =============================================

# OpenAI API Key for prompt evaluation feature (REQUIRED)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-your-openai-api-key-here

# =============================================
# OPTIONAL SERVICES
# =============================================

# Telegram Bot Token (optional - for notifications)
TELEGRAM_BOT_TOKEN=your-telegram-bot-token

# Mailtrap configuration (optional - for email testing)
MAILTRAP_API_TOKEN=your-mailtrap-token
MAILTRAP_SMTP_HOST=smtp.mailtrap.io
MAILTRAP_SMTP_PORT=2525
MAILTRAP_SMTP_USERNAME=your-username
MAILTRAP_SMTP_PASSWORD=your-password

# =============================================
# DEPLOYMENT CONFIGURATION
# =============================================

# Node environment (development/production)
NODE_ENV=production

# Port (usually 5000 for container, 5001 for host)
PORT=5000

# =============================================
# SECURITY BEST PRACTICES
# =============================================
# 
# 1. NEVER commit real environment files to Git
# 2. Use strong, randomly generated secrets
# 3. Rotate secrets regularly (every 3-6 months)
# 4. Use different secrets for each environment
# 5. Limit access to production secrets
# 6. Monitor for exposed secrets in Git history
# 7. Use secret management tools in production
# 8. Enable 2FA on all service accounts
# 9. Use service-specific API keys with minimal permissions
# 10. Regularly audit and remove unused API keys
#
# =============================================
# GENERATING SECURE SECRETS
# =============================================
#
# Generate secure random secrets:
# - Linux/Mac: openssl rand -base64 32
# - Node.js: crypto.randomBytes(32).toString('base64')
# - Online: https://passwordsgenerator.net/
#
# =============================================