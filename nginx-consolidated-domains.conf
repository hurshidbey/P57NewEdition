# Consolidated NGINX Configuration for P57 Domain Strategy
# This configuration implements the new domain structure with proper redirects

# Upstream configuration
upstream protokol57_backend {
    server 127.0.0.1:5001 max_fails=3 fail_timeout=30s;
    keepalive 32;
    keepalive_timeout 65s;
    keepalive_requests 100;
}

# =====================================
# LANDING PAGE - p57.uz & www.p57.uz
# =====================================

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name p57.uz www.p57.uz;
    return 301 https://p57.uz$request_uri;
}

# Main landing page
server {
    listen 443 ssl http2;
    server_name p57.uz www.p57.uz;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/p57.uz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/p57.uz/privkey.pem;
    ssl_protocols TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Root directory
    root /opt/protokol57/landing_page;
    index index.html;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# =====================================
# MAIN APPLICATION - app.p57.uz (NEW)
# =====================================

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name app.p57.uz;
    return 301 https://$server_name$request_uri;
}

# Main application
server {
    listen 443 ssl http2;
    server_name app.p57.uz;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/app.p57.uz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.p57.uz/privkey.pem;
    ssl_protocols TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Logging
    access_log /var/log/nginx/app.p57.uz_access.log;
    error_log /var/log/nginx/app.p57.uz_error.log;
    
    # Client settings
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # Proxy all requests to backend
    location / {
        proxy_pass http://protokol57_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # Health check endpoint
    location = /health {
        proxy_pass http://protokol57_backend;
        access_log off;
    }
    
    # Static assets with caching
    location /assets {
        proxy_pass http://protokol57_backend;
        proxy_cache_valid 200 1y;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# =====================================
# API SUBDOMAIN - api.p57.uz (NEW)
# =====================================

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name api.p57.uz;
    return 301 https://$server_name$request_uri;
}

# API endpoint
server {
    listen 443 ssl http2;
    server_name api.p57.uz;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/api.p57.uz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.p57.uz/privkey.pem;
    ssl_protocols TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # CORS headers (handled by application)
    
    # Logging
    access_log /var/log/nginx/api.p57.uz_access.log;
    error_log /var/log/nginx/api.p57.uz_error.log;
    
    # API requests only
    location / {
        # Rewrite to add /api prefix if not present
        rewrite ^/(?!api/)(.*)$ /api/$1 break;
        
        proxy_pass http://protokol57_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API-specific settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # No caching for API
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        expires off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
    }
}

# =====================================
# LEGACY DOMAIN REDIRECTS
# =====================================

# p57.birfoiz.uz â†’ app.p57.uz
server {
    listen 80;
    server_name p57.birfoiz.uz;
    return 301 https://app.p57.uz$request_uri;
}

server {
    listen 443 ssl http2;
    server_name p57.birfoiz.uz;
    
    ssl_certificate /etc/letsencrypt/live/p57.birfoiz.uz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/p57.birfoiz.uz/privkey.pem;
    
    # Log redirects for monitoring
    access_log /var/log/nginx/redirect_p57.birfoiz.uz.log;
    
    return 301 https://app.p57.uz$request_uri;
}

# =====================================
# BACKUP DOMAINS
# =====================================

# protokol.1foiz.com - Full backup
server {
    listen 80;
    server_name protokol.1foiz.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name protokol.1foiz.com;
    
    ssl_certificate /etc/letsencrypt/live/protokol.1foiz.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/protokol.1foiz.com/privkey.pem;
    ssl_protocols TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    # This serves as a full backup - same config as app.p57.uz
    include /etc/nginx/includes/app-proxy.conf;
    
    # Add header to track backup domain usage
    add_header X-Served-By "backup-domain" always;
}

# srv852801.hstgr.cloud - Technical backup
server {
    listen 80;
    server_name srv852801.hstgr.cloud;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name srv852801.hstgr.cloud;
    
    ssl_certificate /etc/letsencrypt/live/srv852801.hstgr.cloud/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/srv852801.hstgr.cloud/privkey.pem;
    
    # Redirect to primary domain
    return 301 https://app.p57.uz$request_uri;
}

# =====================================
# SHARED CONFIGURATION (include file)
# =====================================
# Create this file at /etc/nginx/includes/app-proxy.conf

# Common proxy configuration for application
# location / {
#     proxy_pass http://protokol57_backend;
#     proxy_http_version 1.1;
#     proxy_set_header Connection "";
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_connect_timeout 10s;
#     proxy_send_timeout 60s;
#     proxy_read_timeout 60s;
# }

# =====================================
# MONITORING ENDPOINTS
# =====================================

# Internal health check endpoint (not exposed externally)
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    location /nginx-status {
        stub_status on;
        access_log off;
    }
    
    location /upstream-status {
        upstream_status;
        access_log off;
    }
}